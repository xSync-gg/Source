_G.AutoParry = true
_G.AutoVote = true
_G.BallESP = true
_G.ESPPlayer = true
local LocalPlayer = game:GetService("Players").LocalPlayer
game:GetService("Workspace").Balls.ChildAdded:Connect(function(child)
    local trackTask = task.spawn(function()
        while wait() do
            local ball = child
            local pos = ball.Position
            wait(0.01)
            local ballspeedIs = (ball.Position - pos).magnitude
            local blockDistanceAuto = ballspeedIs * 2 + _G.ConitMathDistance
            _G.DistanceBeforeParry = blockDistanceAuto
        end
    end)
    child.Destroying:Connect(function()
    	print('Respawn Ball')
        task.cancel(trackTask)
    end)
end)
game:GetService("Workspace").Balls.ChildAdded:Connect(function(child)
    local trackTask = task.spawn(function()
        local ball = child
        while task.wait() do
            if _G.AutoParry then
                if string.find(ball.BrickColor.Name:lower(), "red") then
                    while LocalPlayer:DistanceFromCharacter(ball.CFrame.Position) > _G.DistanceBeforeParry do
                        task.wait()
                    end
                    local ReplicatedStorage = game:GetService("ReplicatedStorage")
                    ReplicatedStorage.Remotes.ParryButtonPress:Fire()
                end
            end
        end
    end)
    child.Destroying:Connect(function()
        task.cancel(trackTask)
    end)
end)
spawn(function()
    pcall(function()
        while wait(0.1) do
            if _G.AutoVote then
                if game:GetService("Players").LocalPlayer.PlayerGui.voter.Enabled == true then
                    modeName = "ffa"
                    local args = {
                        [1] = modeName
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("UpdateVotes"):FireServer(unpack(args))
                end
            end
        end
    end)
end)
function UpdateBallChams() 
    for i,v in pairs(game:GetService("Workspace").Balls:GetChildren()) do
        pcall(function()
            if v.ClassName == "Part" then
                if _G.BallESP then 
                    if not v:FindFirstChild('NameEsp'..Number) then
                        local bill = Instance.new('BillboardGui',v)
                        bill.Name = 'NameEsp'..Number
                        bill.ExtentsOffset = Vector3.new(0, 1, 0)
                        bill.Size = UDim2.new(1,200,1,30)
                        bill.Adornee = v
                        bill.AlwaysOnTop = true
                        local name = Instance.new('TextLabel',bill)
                        name.Font = Enum.Font.GothamSemibold
                        name.FontSize = "Size14"
                        name.TextWrapped = true
                        name.Size = UDim2.new(1,0,1,0)
                        name.TextYAlignment = 'Top'
                        name.BackgroundTransparency = 1
                        name.TextStrokeTransparency = 0.5
                        name.TextColor3 = Color3.fromRGB(82, 53, 254)
                        name.Text = (' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' M')
                        name.TextColor3 = Color3.fromRGB(255, 0, 0)
                    else
                        v['NameEsp'..Number].TextLabel.Text = ('   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' M')
                    end
                else
                    if v:FindFirstChild('NameEsp'..Number) then
                    v:FindFirstChild('NameEsp'..Number):Destroy()
                    end
                end
            end   
        end)
    end
end
UpdateBallChams()
UpdatePlayerChams()
spawn(function()
    pcall(function()
        while wait() do
            if _G.ESPPlayer then
                UpdatePlayerChams()
            end
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            if _G.BallESP then
                UpdateBallChams()
            end
        end
    end)
end)
