local LocalPlayer = game:GetService("Players").LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local MainScreen = PlayerGui:WaitForChild("Main")
local AwakeningToggler = MainScreen:WaitForChild("AwakeningToggler")
local HttpService = game:GetService("HttpService")

local PositionXCount = 0
local ItemRange = 0
local PositionYCount = 0
local PositionXCountFruit = 800
local ItemRangeFruit = 0
local ItemMaxFruit = 2
local PositionYCountFruit = 113
local RequestGetInventory

_G.MythicalCut = true
_G.LegendaryCut = true
_G.RareCut = false
_G.UncommonCut = false
_G.CommonCut = false
_G.MaxCountItem = 10
_G.ShowMasteryCut = true
_G.LevelMasteryCut = 300

local Config = {
	Rarity = {
		Mythical = _G.MythicalCut,
		Legendary = _G.LegendaryCut,
		Rare = _G.RareCut,
		Uncommon = _G.UncommonCut,
		Common = _G.CommonCut
	},
	MaxLength = _G.MaxCountItem,
	ShowMastery = _G.ShowMasteryCut,
	LevelShowMastery = _G.LevelMasteryCut
}

local ItemList = {}
local ItemMax = Config.MaxLength
local Requirement = {
	Mythical = {},
	Legendary = {},
	Rare = {},
	Uncommon = {},
	Common = {}
}

local ViewportSize = workspace.CurrentCamera.ViewportSize
local IconModule = require(Client.PlayerGui.Main.UIController.Inventory.Spritesheets)

if game.CoreGui:FindFirstChild("CreateItem") then
	game.CoreGui:FindFirstChild("CreateItem"):Destroy()
end

local function OffsetXToScale(offset)
	return offset / ViewportSize.X
end

local function OffsetYToScale(offset)
	return offset / ViewportSize.Y
end

local function ScaleXToOffset(scale)
	return scale * ViewportSize.X
end

local function ScaleYToOffset(scale)
	return scale * ViewportSize.Y
end

local function queryData(ItemName)
	local v1 = (ItemName:gsub("'", "")):gsub(":", "") .. "1.png"
	local v2 = (ItemName:gsub("'", "")):gsub(":", "") .. "2.png"
	for i, v in pairs(IconModule) do
		for k, val in pairs(v) do
			if k == v1 then
				return {
					Name = i,
					Value = val
				}
			end
		end
	end
end

local function formatNumber(nb)
	local i, k, j = tostring(nb):match("(%-?%d?)(%d*)(%.?.*)")
	return i .. ((k:reverse()):gsub("(%d%d%d)", "%1,")):reverse() .. j
end

local CreateItemScreen = Instance.new("ScreenGui")
local CreateItems = Instance.new("Frame")
local CreateItemFruit = Instance.new("Frame")

CreateItemScreen.Name = "CreateItem"
CreateItemScreen.Parent = game.CoreGui
CreateItems.Name = HttpService:GenerateGUID()
CreateItems.Parent = CreateItemScreen
CreateItems.Size = UDim2.new(1, 0, 1, 0)
CreateItems.BackgroundTransparency = 1
CreateItemFruit.Name = HttpService:GenerateGUID()
CreateItemFruit.Parent = CreateItemScreen
CreateItemFruit.Size = UDim2.new(1, 0, 1, 0)
CreateItemFruit.BackgroundTransparency = 1

local Fragments = Instance.new("TextLabel")
Fragments.Name = HttpService:GenerateGUID()
Fragments.Parent = CreateItemScreen
Fragments.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Fragments.BackgroundTransparency = 1
Fragments.Position = UDim2.new(0, 6, 0.65, 0)
Fragments.Size = UDim2.new(0.15, 0, 0.06, 5)
Fragments.ZIndex = -9
Fragments.Font = Enum.Font.SourceSansBold
Fragments.Text = "Æ’" .. formatNumber(Client.Data.Fragments.Value)
Fragments.TextColor3 = Color3.fromRGB(177, 121, 255)
Fragments.TextScaled = true
Fragments.TextSize = 36
Fragments.TextStrokeTransparency = 0
Fragments.TextWrapped = true
Fragments.TextXAlignment = Enum.TextXAlignment.Left

Client.PlayerGui.Main.MenuButton.Position = UDim2.new(0, 10, 0.6, 0)

local function createItem(ItemType, ItemNames, ItemIcon, ImageRectSize, ItemRectOffset, ItemBackgroundColor, ExtraData, Data)
	local frame = Instance.new("Frame")
	local itemLine = Instance.new("TextLabel")
	local itemName = Instance.new("TextLabel")
	local background = Instance.new("ImageLabel")
	local uicorner = Instance.new("UICorner")
	local uigradient = Instance.new("UIGradient")
	local icon = Instance.new("ImageLabel")
	
	if ItemRange >= ItemMax then
		PositionYCount = PositionYCount + 101
		ItemRange = 0
		PositionXCount = 0
	end
	
	frame.Name = HttpService:GenerateGUID()
	frame.Parent = CreateItems
	frame.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
	frame.BackgroundTransparency = 1
	frame.LayoutOrder = 1
	frame.Size = UDim2.new(0, 100, 0, 100)
	frame.Position = UDim2.new(0, PositionXCount, 0, PositionYCount)
	PositionXCount = PositionXCount + 101
	ItemRange = ItemRange + 1
	
	itemLine.Name = HttpService:GenerateGUID()
	itemLine.Parent = frame
	itemLine.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	itemLine.BackgroundTransparency = 1
	itemLine.Position = UDim2.new(0.08, 0, 0.02, 0)
	itemLine.Size = UDim2.new(0.7, 0, 0.15, 0)
	itemLine.ZIndex = 5
	itemLine.Font = Enum.Font.SourceSansItalic
	itemLine.Text = ItemType
	itemLine.TextColor3 = Color3.fromRGB(255, 255, 255)
	itemLine.TextScaled = true
	itemLine.TextSize = 14
	itemLine.TextStrokeTransparency = 0.6
	itemLine.TextWrapped = true
	itemLine.TextXAlignment = Enum.TextXAlignment.Left
	itemLine.TextYAlignment = Enum.TextYAlignment.Top
	
	itemName.Name = HttpService:GenerateGUID()
	itemName.Parent = frame
	itemName.AnchorPoint = Vector2.new(1, 1)
	itemName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	itemName.BackgroundTransparency = 1
	itemName.Position = UDim2.new(0.96, 0, 0.98, 0)
	itemName.Size = UDim2.new(0.6, 0, 0.32, 0)
	itemName.ZIndex = 5
	itemName.Font = Enum.Font.SourceSansSemibold
	itemName.Text = ItemNames
	itemName.TextColor3 = Color3.fromRGB(255, 255, 255)
	itemName.TextScaled = true
	itemName.TextSize = 14
	itemName.TextStrokeTransparency = 0.6
	itemName.TextWrapped = true
	itemName.TextXAlignment = Enum.TextXAlignment.Right
	itemName.TextYAlignment = Enum.TextYAlignment.Bottom
	
	background.Name = HttpService:GenerateGUID()
	background.Parent = frame
	background.BackgroundColor3 = ItemBackgroundColor
	background.BorderSizePixel = 0
	background.Size = UDim2.new(1, 0, 1, 0)
	background.ZIndex = 3
	background.Image = "http://www.roblox.com/asset/?id=9944431153"
	background.ImageColor3 = Color3.fromRGB(0, 0, 0)
	background.ImageTransparency = 1
	
	uicorner.CornerRadius = UDim.new(0.07, 0)
	uicorner.Parent = background
	
	uigradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(172, 172, 172)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(225, 225, 225))
	})
	uigradient.Rotation = 90
	uigradient.Parent = background
	
	icon.Name = HttpService:GenerateGUID()
	icon.Parent = frame
	icon.AnchorPoint = Vector2.new(0.5, 0.5)
	icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	icon.BackgroundTransparency = 1
	icon.Position = UDim2.new(0.5, 0, 0.5, 0)
	icon.Size = UDim2.new(0.9, 0, 0.9, 0)
	icon.Visible = true
	icon.ZIndex = 4
	icon.Image = ItemIcon
	icon.ScaleType = Enum.ScaleType.Fit
	icon.ImageRectSize = ItemRectOffset
	icon.ImageRectOffset = ImageRectSize
	
	if ExtraData then
		local extraDataLabel = Instance.new("TextLabel")
		extraDataLabel.Name = HttpService:GenerateGUID()
		extraDataLabel.Parent = frame
		extraDataLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		extraDataLabel.BackgroundTransparency = 1
		extraDataLabel.Position = UDim2.new(0.05, 0, 0.68, 0)
		extraDataLabel.Size = UDim2.new(0.85, 0, 0.22, 0)
		extraDataLabel.ZIndex = 5
		extraDataLabel.Font = Enum.Font.SourceSansBold
		extraDataLabel.Text = ExtraData
		extraDataLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		extraDataLabel.TextScaled = true
		extraDataLabel.TextSize = 14
		extraDataLabel.TextStrokeTransparency = 0.6
		extraDataLabel.TextWrapped = true
		extraDataLabel.TextXAlignment = Enum.TextXAlignment.Left
		extraDataLabel.TextYAlignment = Enum.TextYAlignment.Center
	end
end

local function updateItems()
	if RequestGetInventory then
		RequestGetInventory:Disconnect()
	end
	
	RequestGetInventory = Client.OnGetInventory:Connect(function(ItemData)
		for _, item in pairs(ItemList) do
			item:Destroy()
		end
		ItemList = {}
		PositionXCount = 0
		PositionYCount = 0
		ItemRange = 0
		
		for _, item in ipairs(ItemData) do
			local data = queryData(item.Name)
			if data then
				table.insert(ItemList, createItem(
					item.Rarity,
					item.Name,
					data.Value,
					data.Name,
					item.RarityColor,
					item.ExtraData,
					item
				))
			end
		end
	end)
end

updateItems()
